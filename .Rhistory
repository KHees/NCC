}
models %in% c("fixmodel", "mixmodel", "mixmodel_AR1", "inv_u", "seasonal")==FALSE)>0
sum(models %in% c("fixmodel", "mixmodel", "mixmodel_AR1", "inv_u", "seasonal")==FALSE)
if(sum(models %in% c("fixmodel", "mixmodel", "mixmodel_AR1", "inv_u", "seasonal")==FALSE)>0){
print("Time trend pattern (`trend`) must be one of the following strings: 'linear', 'stepwise', 'stepwise_2', 'inv_u', 'seasonal'!")
}
datasim_bin(num_arms = 3, n_arm = 100, d = c(0, 100, 250), p0 = 0.7, OR = rep(1.8, 6), lambda = rep(0.15, 4), trend="linear")
datasim_bin(num_arms = 3, n_arm = 100, d = c(0, 100, 250), p0 = 0.7, OR = rep(1.8, 3), lambda = rep(0.15, 4), trend=c("linear", "stepwise"))
perc_cores>=1
0.9>=1
0.9<=0
library(tidyverse)
scenarios <- data.frame(num_arms = 4,
n_arm = 250,
d1 = 250*0,
d2 = 250*1,
d3 = 250*2,
d4 = 250*3,
period_blocks = 2,
mu0 = 0,
sigma = 1,
theta1 = 0,
theta2 = 0,
theta3 = 0,
theta4 = 0,
lambda0 = rep(seq(-0.5, 0.5, length.out = 9), each=3),
lambda1 = rep(seq(-0.5, 0.5, length.out = 9), each=3),
lambda2 = rep(seq(-0.5, 0.5, length.out = 9), each=3),
lambda3 = rep(seq(-0.5, 0.5, length.out = 9), each=3),
lambda4 = rep(seq(-0.5, 0.5, length.out = 9), each=3),
trend = c(rep("linear", 27), rep("stepwise_2", 27), rep("stepwise",27), rep("inv_u", 27), rep("seasonal", 27*2)),
alpha = 0.025,
ncc = TRUE,
unit_size = 25,
ci = FALSE,
bs_degree = c(1,2,3),
poly_degree = c(1,2,3),
n_wave = c(rep(NA, 27*4), rep(1, 27), rep(2, 27)),
N_peak = 750) %>%
mutate(timetrend = ifelse(lambda0==lambda1 & lambda1==lambda2 & lambda1==lambda3, "EQ", "DIFF"),
hypothesis = ifelse(theta2==0 & theta3==0, "H0", "H1"))
as.numeric(scenarios[i, grepl("^d\\d", names(scenarios))])
i=1
as.numeric(scenarios[i, grepl("^d\\d", names(scenarios))])
2:scenarios[i,]$num_arms
as.numeric(scenarios[i, grepl("^d\\d", names(scenarios))])[1:scenarios[i,]$num_arms]
as.numeric(scenarios[i, grepl("^theta\\d", names(scenarios))])[1:scenarios[i,]$num_arms]
as.numeric(scenarios[i, grepl("^theta\\d", names(scenarios))])
as.numeric(scenarios[i, grepl("^lambda\\d", names(scenarios))])[1:scenarios[i,]$num_arms]
as.numeric(scenarios[i, grepl("^lambda\\d", names(scenarios))])
[1:(scenarios[i,]$num_arms+1)]
1:(scenarios[i,]$num_arms+1)
as.numeric(scenarios[i, grepl("^lambda\\d", names(scenarios))])[1:(scenarios[i,]$num_arms+1)]
colnames(scenarios)
trial_data <- datasim_bin(num_arms = 3, n_arm = 100, d = c(0, 100, 250),
p0 = 0.7, OR = rep(1.8, 3), lambda = rep(0.15, 4), trend="stepwise")
c("treatment", "respose") %in% colnames(trial_data)
c("treatment", "response") %in% colnames(trial_data)
View(trial_data)
c("treatment", "response", "period") %in% colnames(trial_data)
c("treatment", "response", "period") %in% colnames(trial_data)!=3
sum(c("treatment", "response", "period") %in% colnames(trial_data))!=3
is.data.frame(trial_data)
is.logical(TRUE)
is.logical(FALSE)
library(mgsv)
library(mgcv)
?s
?gam
if (!require('shiny')) install.packages("shiny")
shiny::runGitHub("Allocation", "MartaBofillRoig", subdir = "OptiPlat")
library(mgcv)
?gam
?s
24.4-15.5
30.8-24.4
devtools::install_github("pavlakrotka/NCC", build = TRUE, force = TRUE)
library(NCC)
scenario_i_null <- datasim_cont(num_arms = 3,
n_arm = 250,
d = 250*c(0:2),
period_blocks = 2,
mu0 = 0,
theta = rep(0, 3),
lambda = rep(0.15, 4),
sigma = 1,
trend = "stepwise_2",
full = TRUE)$Data
scenario_i_null %>%
group_by(period, treatment) %>%
summarize(mean(response),
length(response))
library(tidyverse)
View(scenario_i_null)
scenario_i_null %>%
group_by(period, treatment) %>%
summarize(mean(response),
length(response))
## given expected and 'maximum' jump in the mean between periods/buckets,
## what are the corresponding tau_a and tau_b?
from_jump_size_to_tau_a_b <- function(e_jump_size = 0.01, max_jump_size = 0.1){
fun_to_solve <- function(tau_b, max_jump_size, e_jump_size){
pgamma(1 / max_jump_size ^ 2, 1 / (e_jump_size ^ 2) * tau_b, tau_b) - 0.01
}
tau_b <- uniroot(fun_to_solve,
c(1e-12, 1e12),
max_jump_size = max_jump_size,
e_jump_size = e_jump_size)$root
tau_a <- 1 / e_jump_size ^ 2 * tau_b
c(tau_a = tau_a,
tau_b = tau_b)
}
from_jump_size_to_tau_a_b(0.01,0.1)
#### Control response over time
ggplot(scenario_i_null %>%
mutate(treatment = ifelse(treatment==0, 0, NA))) +
geom_point(aes(x=c(1:nrow(scenario_i_null)), y=means, color = as.factor(treatment)), size = 3) +
scale_color_discrete(na.translate = F) +
labs(x = "Patients in the trial", y = "Mean response in the control") +
theme_bw() +
theme(legend.position = "none") +
labs(title = "Control response over time")
#### Trial progress over time
plot_trial(scenario_i_null$treatment) +
labs(title = "Trial progress over time")
scenario_ii_alt <- datasim_cont(num_arms = 4, n_arm = 250, d = c(0, 300, 800, 800), period_blocks = 2, mu0 = 0,
theta = rep(0.25, 4), lambda = rep(0.15, 5), sigma = 1, trend = "stepwise_2", full = TRUE)$Data
timemachine_cont(scenario_ii_alt,
arm = 3,
alpha = 0.025,
prec_delta = 0.001,
prec_gamma = 0.001,
tau_a = 1,
tau_b = 0.0001,
prec_a = 0.001,
prec_b = 0.001,
bucket_size = 25) %>% unlist() %>% `[`(2:4) %>% round(2)
poolmodel_cont(data = scenario_ii_alt, arm = 3) %>% unlist() %>% `[`(2:4) %>% as.numeric() %>% round(2)
fixmodel_cont(data = scenario_ii_alt, arm = 3) %>% unlist() %>% `[`(2:4) %>% as.numeric() %>% round(2)
#### Trial progress over time
plot_trial(scenario_ii_null$treatment) +
labs(title = "Trial progress over time")
scenario_ii_null <- datasim_cont(num_arms = 4, n_arm = 250, d = c(0, 300, 800, 800), period_blocks = 2, mu0 = 0,
theta = rep(0, 4), lambda = rep(0.15, 5), sigma = 1, trend = "stepwise_2", full = TRUE)$Data
#### Trial progress over time
plot_trial(scenario_ii_null$treatment) +
labs(title = "Trial progress over time")
#### Control response over time
ggplot(scenario_ii_null %>%
mutate(treatment = ifelse(treatment==0, 0, NA))) +
geom_point(aes(x=c(1:nrow(scenario_ii_null)), y=means, color = as.factor(treatment)), size = 3) +
scale_color_discrete(na.translate = F) +
labs(x = "Patients in the trial", y = "Mean response in the control") +
theme_bw() +
theme(legend.position = "none") +
labs(title = "Control response over time")
timemachine_cont(scenario_i_null,
arm = 2,
alpha = 0.025,
prec_delta = 0.001,
prec_gamma = 0.001,
tau_a = 1,
tau_b = 0.0001,
prec_a = 0.001,
prec_b = 0.001,
bucket_size = 25) %>% unlist() %>% `[`(2:4) %>% round(2)
poolmodel_cont(data = scenario_i_null, arm = 2) %>% unlist() %>% `[`(2:4) %>% as.numeric() %>% round(2)
fixmodel_cont(data = scenario_i_null, arm = 2) %>% unlist() %>% `[`(2:4) %>% as.numeric() %>% round(2)
devtools::install_github("pavlakrotka/NCC", build = TRUE, force=T)
library(knitr)
opts_chunk$set(echo = TRUE,
message = FALSE,
error = FALSE,
warning = FALSE,
comment = "",
fig.align = "center",
out.width = "100%")
library(NCC)
sim_scenarios <- data.frame(num_arms = 4,
n_arm = 250,
d1 = 250*0,
d2 = 250*1,
d3 = 250*2,
d4 = 250*3,
period_blocks = 2,
mu0 = 0,
sigma = 1,
theta1 = 0,
theta2 = 0,
theta3 = 0,
theta4 = 0,
lambda0 = rep(seq(-0.15, 0.15, length.out = 9), 2),
lambda1 = rep(seq(-0.15, 0.15, length.out = 9), 2),
lambda2 = rep(seq(-0.15, 0.15, length.out = 9), 2),
lambda3 = rep(seq(-0.15, 0.15, length.out = 9), 2),
lambda4 = rep(seq(-0.15, 0.15, length.out = 9), 2),
trend = c(rep("linear", 9), rep("stepwise_2", 9)),
alpha = 0.025,
ncc = TRUE)
head(sim_scenarios)
set.seed(1234)
sim_results <- sim_study_par(nsim = 1000, scenarios = sim_scenarios, arms = 4,
models = c("fixmodel", "sepmodel", "poolmodel"), endpoint = "cont")
head(sim_results)
ggplot(sim_results, aes(x=lambda0, y=reject_h0, color=model)) +
geom_point() +
geom_line() +
facet_grid(~ trend) +
geom_hline(aes(yintercept = 0.025), linetype = "dotted") +
labs(x="Strength of time trend", y="Type I error", color="Analysis approach") +
theme_bw()
library(ggplot2)
ggplot(sim_results, aes(x=lambda0, y=bias, color=model)) +
geom_point() +
geom_line() +
facet_grid(~ trend) +
geom_hline(aes(yintercept = 0), linetype = "dotted") +
labs(x="Strength of time trend", y="Bias", color="Analysis approach") +
theme_bw()
ggplot(sim_results, aes(x=lambda0, y=reject_h0, color=model)) +
geom_point() +
geom_line() +
facet_grid(~ trend) +
geom_hline(aes(yintercept = 0.025), linetype = "dotted") +
labs(x="Strength of time trend", y="Type I error", color="Analysis approach") +
theme_bw()
ggplot(sim_results, aes(x=lambda0, y=MSE, color=model)) +
geom_point() +
geom_line() +
facet_grid(~ trend) +
labs(x="Strength of time trend", y="MSE", color="Analysis approach") +
theme_bw()
library(NCC)
set.seed(2346)
data <- datasim_bin(num_arms = 3, n_arm = 100, d = c(0, 100, 250),
p0 = 0.7, OR = rep(1.8, 3), lambda = rep(0.15, 4), trend="stepwise")
head(data)
plot_trial(data$treatment)
set.seed(2346)
trial_data <- datasim_bin(num_arms = 3, n_arm = 100, d = c(0, 100, 250),
p0 = 0.7, OR = rep(1.8, 3), lambda = rep(0.15, 4), trend="stepwise")
head(trial_data)
set.seed(246)
trial_data <- datasim_bin(num_arms = 3, n_arm = 100, d = c(0, 100, 250),
p0 = 0.7, OR = rep(1.8, 3), lambda = rep(0.15, 4), trend="stepwise")
head(trial_data)
set.seed(24)
trial_data <- datasim_bin(num_arms = 3, n_arm = 100, d = c(0, 100, 250),
p0 = 0.7, OR = rep(1.8, 3), lambda = rep(0.15, 4), trend="stepwise")
head(trial_data)
plot_trial(trial_data$treatment)
setwd("C:/Users/pavla/Nextcloud/GitKraken/NCC/paper")
plot_trial(trial_data$treatment)
ggsave("plot_trial.png")
ggplot2::ggsave("plot_trial.png")
ggplot2::ggsave("plot_trial.png", height = 4, width = 7)
fixmodel_bin(data=trial_data, arm=3)
set.seed(4)
trial_data <- datasim_bin(num_arms = 3, n_arm = 100, d = c(0, 100, 250),
p0 = 0.7, OR = rep(1.8, 3), lambda = rep(0.15, 4), trend="stepwise")
head(trial_data)
fixmodel_bin(data=trial_data, arm=3)
set.seed(123)
trial_data <- datasim_bin(num_arms = 3, n_arm = 100, d = c(0, 100, 250),
p0 = 0.7, OR = rep(1.8, 3), lambda = rep(0.15, 4), trend="stepwise")
head(trial_data)
fixmodel_bin(data=trial_data, arm=3)
set.seed(123)
trial_data <- datasim_bin(num_arms = 3, n_arm = 100, d = c(0, 100, 250),
p0 = 0.7, OR = rep(1.8, 3), lambda = rep(0.15, 4), trend="stepwise")
head(trial_data)
plot_trial(trial_data$treatment)
ggplot2::ggsave("plot_trial.png", height = 4, width = 7)
fixmodel_bin(data=trial_data, arm=3)
summary(fixmodel_bin(data=trial_data, arm=3)$model)
MAPprior_bin(data=trial_data,arm=3)
timemachine_bin(data=trial_data,arm=3)
set.seed(1234)
trial_data <- datasim_bin(num_arms = 3, n_arm = 100, d = c(0, 100, 250),
p0 = 0.7, OR = rep(1.8, 3), lambda = rep(0.15, 4), trend="stepwise")
head(trial_data)
set.seed(234)
trial_data <- datasim_bin(num_arms = 3, n_arm = 100, d = c(0, 100, 250),
p0 = 0.7, OR = rep(1.8, 3), lambda = rep(0.15, 4), trend="stepwise")
head(trial_data)
set.seed(2345)
trial_data <- datasim_bin(num_arms = 3, n_arm = 100, d = c(0, 100, 250),
p0 = 0.7, OR = rep(1.8, 3), lambda = rep(0.15, 4), trend="stepwise")
head(trial_data)
fixmodel_bin(data=trial_data, arm=3)
set.seed(678)
trial_data <- datasim_bin(num_arms = 3, n_arm = 100, d = c(0, 100, 250),
p0 = 0.7, OR = rep(1.8, 3), lambda = rep(0.15, 4), trend="stepwise")
head(trial_data)
set.seed(098)
trial_data <- datasim_bin(num_arms = 3, n_arm = 100, d = c(0, 100, 250),
p0 = 0.7, OR = rep(1.8, 3), lambda = rep(0.15, 4), trend="stepwise")
head(trial_data)
fixmodel_bin(data=trial_data, arm=3)
set.seed(123)
trial_data <- datasim_bin(num_arms = 3, n_arm = 100, d = c(0, 100, 250),
p0 = 0.7, OR = rep(1.8, 3), lambda = rep(0.15, 4), trend="stepwise")
head(trial_data)
plot_trial(trial_data$treatment)
ggplot2::ggsave("plot_trial.png", height = 4, width = 7)
fixmodel_bin(data=trial_data, arm=3)
exp(0.9887792)
trial_data <- datasim_bin(num_arms = 3, n_arm = 1000, d = c(0, 1000, 2500),
p0 = 0.7, OR = rep(1.8, 3), lambda = rep(0.15, 4), trend="stepwise")
fixmodel_bin(data=trial_data, arm=3)
exp(0.8965007)
plot_trial(trial_data$treatment)
exp(0.6679937)
exp(1.130045)
trial_data <- datasim_bin(num_arms = 3, n_arm = 1000, d = c(0, 1000, 2500),
p0 = 0.7, OR = rep(1.8, 3), lambda = rep(0.15, 4), trend="stepwise")
fixmodel_bin(data=trial_data, arm=3)
exp(0.7655158)
exp(0.5380234)
exp(0.9975361)
trial_data <- datasim_bin(num_arms = 3, n_arm = 10000, d = c(0, 10000, 25000),
p0 = 0.7, OR = rep(1.8, 3), lambda = rep(0.15, 4), trend="stepwise")
fixmodel_bin(data=trial_data, arm=3)
exp(0.5931914)
trial_data <- datasim_bin(num_arms = 3, n_arm = 10000, d = c(0, 10000, 25000),
p0 = 0.7, OR = rep(1.8, 3), lambda = rep(0.15, 4), trend="stepwise")
fixmodel_bin(data=trial_data, arm=3)
exp(0.5633143)
set.seed(123)
trial_data <- datasim_bin(num_arms = 3, n_arm = 100, d = c(0, 100, 250),
p0 = 0.7, OR = rep(1.8, 3), lambda = rep(0.15, 4), trend="stepwise")
head(trial_data)
plot_trial(trial_data$treatment)
fixmodel_bin(data=trial_data, arm=3)
?fixmodel_bin
exp(log(13))
summary(fixmodel_bin(data=trial_data, arm=3)$model)
fixmodel_bin(data=trial_data, arm=3)$model
?str
str(fixmodel_bin(data=trial_data, arm=3))
set.seed(123)
trial_data <- datasim_bin(num_arms = 3, n_arm = 100, d = c(0, 100, 250),
p0 = 0.7, OR = rep(1.8, 3), lambda = rep(0.15, 4), trend="stepwise")
head(trial_data)
MAPprior_bin(data=trial_data, arm=3, alpha=0.025)
timemachine_bin(data=trial_data, arm=3, alpha=0.025)
data
rm(data)
?data
lambda_values <- rep(seq(-0.15, 0.15, length.out = 9), 2)
sim_scenarios <- data.frame(num_arms = 4,
n_arm = 250,
d1 = 250*0,
d2 = 250*1,
d3 = 250*2,
d4 = 250*3,
period_blocks = 2,
mu0 = 0,
sigma = 1,
theta1 = 0,
theta2 = 0,
theta3 = 0,
theta4 = 0,
lambda0 = lambda_values,
lambda1 = lambda_values,
lambda2 = lambda_values,
lambda3 = lambda_values,
lambda4 = lambda_values,
trend = c(rep("linear", 9), rep("stepwise_2", 9)),
alpha = 0.025,
ncc = TRUE)
lambda_values <- rep(seq(-0.15, 0.15, length.out = 9), 2)
sim_scenarios <- data.frame(num_arms = 4,
n_arm = 250,
d1 = 250*0,
d2 = 250*1,
d3 = 250*2,
d4 = 250*3,
period_blocks = 2,
mu0 = 0,
sigma = 1,
theta1 = 0,
theta2 = 0,
theta3 = 0,
theta4 = 0,
lambda0 = lambda_values,
lambda1 = lambda_values,
lambda2 = lambda_values,
lambda3 = lambda_values,
lambda4 = lambda_values,
trend = c(rep("linear", 9), rep("stepwise_2", 9)),
alpha = 0.025,
ncc = TRUE)
set.seed(1234)
sim_results <- sim_study_par(nsim = 1000, scenarios = sim_scenarios, arms = 4,
models = c("fixmodel", "sepmodel", "poolmodel"), endpoint = "cont")
theme_bw()
library(ggplot2)
theme_bw()
ggplot(sim_results, aes(x=lambda0, y=reject_h0, color=model)) +
geom_point() +
geom_line() +
facet_grid(~ trend) +
geom_hline(aes(yintercept = 0.025), linetype = "dotted") +
labs(x="Strength of time trend", y="Type I error", color="Analysis approach") +
scale_co
theme_bw()
View(sim_results)
head(sim_results)
ggplot(sim_results, aes(x=lambda0, y=reject_h0, color=model)) +
geom_point() +
geom_line() +
facet_grid(~ trend) +
geom_hline(aes(yintercept = 0.025), linetype = "dotted") +
labs(x="Strength of time trend", y="Type I error", color="Analysis approach") +
scale_co
ggplot(sim_results, aes(x=lambda0, y=reject_h0, color=model)) +
geom_point() +
geom_line() +
facet_grid(~ trend) +
geom_hline(aes(yintercept = 0.025), linetype = "dotted") +
labs(x="Strength of time trend", y="Type I error", color="Analysis approach") +
theme_bw()
ggsave("t1e.png")
?ggsave
ggsave("t1e.png", width = 4, height = 7)
ggsave("t1e.png", width = 6, height = 7)
ggsave("t1e.png", width = 7, height = 5)
ggplot(sim_results, aes(x=lambda0, y=bias, color=model)) +
geom_point() +
geom_line() +
facet_grid(~ trend) +
geom_hline(aes(yintercept = 0), linetype = "dotted") +
labs(x="Strength of time trend", y="Bias", color="Analysis approach") +
theme_bw()
ggsave("bias.png", width = 7, height = 5)
ggplot(sim_results, aes(x=lambda0, y=MSE, color=model)) +
geom_point() +
geom_line() +
facet_grid(~ trend) +
labs(x="Strength of time trend", y="MSE", color="Analysis approach") +
theme_bw()
ggsave("mse.png", width = 7, height = 5)
lambda_values <- rep(seq(-0.5, 0.5, length.out = 9), 2)
sim_scenarios <- data.frame(num_arms = 4,
n_arm = 250,
d1 = 250*0,
d2 = 250*1,
d3 = 250*2,
d4 = 250*3,
period_blocks = 2,
p0 = 0.7,
OR1 = 1,
OR2 = 1,
OR3 = 1,
OR4 = 1,
lambda0 = lambda_values,
lambda1 = lambda_values,
lambda2 = lambda_values,
lambda3 = lambda_values,
lambda4 = lambda_values,
trend = c(rep("linear", 9), rep("stepwise_2", 9)),
alpha = 0.025,
ncc = TRUE)
head(sim_scenarios)
lambda_values
set.seed(1234)
sim_results <- sim_study_par(nsim = 1000, scenarios = sim_scenarios, arms = 4,
models = c("fixmodel", "sepmodel", "poolmodel"), endpoint = "bin")
View(sim_scenarios)
View(sim_results)
head(sim_results)
ggplot(sim_results, aes(x=lambda0, y=reject_h0, color=model)) +
geom_point() +
geom_line() +
facet_grid(~ trend) +
geom_hline(aes(yintercept = 0.025), linetype = "dotted") +
labs(x="Strength of time trend", y="Type I error", color="Analysis approach") +
theme_bw()
ggsave("t1e.png", width = 7, height = 5)
ggplot(sim_results, aes(x=lambda0, y=bias, color=model)) +
geom_point() +
geom_line() +
facet_grid(~ trend) +
geom_hline(aes(yintercept = 0), linetype = "dotted") +
labs(x="Strength of time trend", y="Bias", color="Analysis approach") +
theme_bw()
ggsave("bias.png", width = 7, height = 5)
ggplot(sim_results, aes(x=lambda0, y=MSE, color=model)) +
geom_point() +
geom_line() +
facet_grid(~ trend) +
labs(x="Strength of time trend", y="MSE", color="Analysis approach") +
theme_bw()
ggsave("mse.png", width = 7, height = 5)
?RBesT::rmix
fixmodel_bin(data=trial_data, arm=3, alpha=0.025)
MAPprior_bin(data=trial_data, arm=3, alpha=0.025)
timemachine_bin(data=trial_data, arm=3, alpha=0.025)
log(3.074165)
exp(0.9103138)
# Copy in R folder the functions of the r package
setwd("C:/Users/pavla/Nextcloud/GitKraken/NCC")
devtools::document()
devtools::load_all()
# Build & check the package
devtools::build(pkg = "C:/Users/pavla/Nextcloud/GitKraken/NCC", path = NULL, binary = FALSE, manual = TRUE, vignettes = TRUE)
devtools::build_manual(pkg = "C:/Users/pavla/Nextcloud/GitKraken/NCC", path = NULL)
# Run once to configure your package to use pkgdown
usethis::use_pkgdown()
# Run to build the website
pkgdown::build_site()
